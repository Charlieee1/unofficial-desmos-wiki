<!DOCTYPE html>
<html>
  <head>
    <link rel="stylesheet" href="{{ '/css/base.css' | url }}" />
    <title>{{ title }}</title>
    {% if description %}
      <meta name="Description" content="{{ description }}">
    {% endif %}
    <script src="https://www.desmos.com/api/v1.9/calculator.js?apiKey=dcb31709b452b1cf9dc26972add0fda6"></script>
  </head>
  <body>
    <header>
      <a href="{{ '/' | url }}">
        <h1>Desmos Wiki
          <span class="unofficial">(Unofficial)</span>
        </h1>
      </a>
    </header>
    <nav class="breadcrumbs">
      {% assign breadcrumbs = collections.all | eleventyNavigationBreadcrumb: eleventyNavigation.key %}
      <ul>
        {% for breadcrumb in breadcrumbs %}
          <li>
            <a href="{{ breadcrumb.url | url }}">{{ breadcrumb.title }}</a>
          </li>
        {% endfor %}
      </ul>
    </nav>
    <main>
      <h1>{{ title }}</h1>
      <ul class="tags">
        {% for tag in tags %}
          <li class="tag">{{ tag }}</li>
        {% endfor %}
      </ul>
      {{ content }}
    </main>
    <script>
      function addDesmosEmbed(calcContainer) {
        let observer = new IntersectionObserver(() => {
          let graphstate = JSON.parse(calcContainer.children[0].innerText);
          let settings = JSON.parse(calcContainer.children[1].innerText);
          calcContainer.innerHTML = "";
          let Calc = Desmos.GraphingCalculator(calcContainer, settings);
          Calc.setState(graphstate);
        });
        observer.observe(calcContainer);
      }

      for (const calcContainer of document.querySelectorAll(".desmos-container")) {
        addDesmosEmbed(calcContainer);
        calcContainer.classList.toggle("invisible", false);
      }

      for (const staticMathContainer of document.querySelectorAll(".static-math-container")) {
        const content = staticMathContainer.innerText;
        staticMathContainer.innerHTML = "";
        const rootblock = document.createElement("span");
        rootblock.classList.toggle("dcg-mq-root-block", true);
        staticMathContainer.appendChild(rootblock);
        const staticMath = Desmos.MathQuill.StaticMath(rootblock);
        staticMath.latex(content);
      }
    </script>
  </body>
</html>